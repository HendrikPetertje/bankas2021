{"version":3,"sources":["components/header/images/background.jpg","components/header/images/logo.png","components/theme/images/theme-picture.jpg","components/pictureBreak/images/boatkids.jpg","components/pictureBreak/images/horsies.jpg","components/pictureBreak/images/station.jpg","components/expectations/images/rules-aside.jpg","components/questions/images/finalpic.jpg","components/questions/images/bilda.png","components/header/Header.tsx","config.ts","components/registerButton/RegisterButton.tsx","components/theme/Theme.tsx","components/pictureBreak/PictureBreak.tsx","components/campInfo/CampInfo.tsx","components/expectations/Expectations.tsx","components/questions/Questions.tsx","components/app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","style","backgroundImage","banner","className","src","logo","alt","config","registerOpen","RegisterButton","href","rel","target","Theme","themePicture","PictureBreak","props","picture","item","boatKids","horsies","station","CampInfo","Expectations","rulesAside","text","bildaPic","Questions","sandCastle","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.df7c6120.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.fe0f65fd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.a78828fd.png\";","module.exports = __webpack_public_path__ + \"static/media/theme-picture.7491707e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/boatkids.0976f3f7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/horsies.c9eebfe1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/station.9b284bc1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rules-aside.7a01d1a3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/finalpic.8774674b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bilda.88890092.png\";","import React from 'react';\nimport './header.style.scss';\nimport banner from './images/background.jpg';\nimport logo from './images/logo.png';\n\nconst Header: React.FC = () => (\n  <header style={{ backgroundImage: `url(${banner})` }}>\n    <div className=\"container\">\n      <img src={logo} alt=\"\" />\n    </div>\n  </header>\n);\n\nexport default Header;\n","const config = {\n  registerOpen: false,\n};\n\nexport default config;\n","import React from 'react';\nimport './RegisterButton.style.scss';\nimport config from '../../config';\n\nconst { registerOpen } = config;\n\nconst RegisterButton: React.FC = () => {\n  if (registerOpen) {\n    return (\n      <a className=\"registerButton\" href=\"https://docs.google.com/forms/d/e/1FAIpQLSeVzViUSbN64Af1bBBMwdmIEaG9dW_0OJomal7mTaqIuS21DQ/viewform\" rel=\"noopener noreferrer\" target=\"_blank\">\n        Anmäl dig här\n      </a>\n    );\n  }\n\n  return (<></>);\n};\n\nexport default RegisterButton;\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './Theme.style.scss';\nimport themePicture from './images/theme-picture.jpg';\n\nconst text = `\n# Wanted by a living God\n\nNu är det dags för sommarens stora äventyr. Under årets vilda västernläger gräver vi\nguld och möts till dueller i skogen, går på buffeljakt, kastar lasso, gör\nindianflätor, spelar brädspel och dansar linedans eller drabbar samman i\nvattenkrig på stranden. Under dagarna ger vi oss ut på äventyrsvandring med\nsvårlösta mysterier eller hjälper sheriffen att jaga skurken.\n\nI vår saloon står maten framdukad bland kaktusarna. Vi möts kring elden vid\nlägerbålet, grillar pinnbröd och samtalar om livet innan vi somnar skönt i\nvåra tält vid solnedgången.\n\nÄntligen en sommar då barnlägret är tillbaka som vanligt, där vi bor i\negna tält, köper glass i kiosken och badar i havet. Vi hjälps åt att tillsammans\ngöra det här till den bästa veckan på året.\n`;\n\nconst textTwo = `\n# TEMA\nÅrets tema handlar om att vi är älskade av en Gud som ser oss som ovärderliga.\nPriceless, i Hans ögon.\n\nDet är ett tema som följer oss i den spännande teatern och som skildras i\nliknelserna på morgonandakten, som vi samtalar om i vår smågrupp Klanen och\nsjunger om vid samlingarna.\n`;\n\nconst Theme: React.FC = () => (\n  <>\n    <section className=\"section theme\">\n      <div className=\"container\">\n        <div className=\"columns\">\n          <div className=\"column theme-text reg-padded white-background\">\n            <ReactMarkdown>{text}</ReactMarkdown>\n          </div>\n          <div className=\"column theme-picture\" style={{ backgroundImage: `url(${themePicture})` }} />\n        </div>\n      </div>\n    </section>\n    <section className=\"section theme-part-two middle\">\n      <div className=\"container\">\n        <div className=\"columns\">\n          <div className=\"column reg-padded white-background\">\n            <ReactMarkdown>{textTwo}</ReactMarkdown>\n          </div>\n        </div>\n      </div>\n    </section>\n  </>\n);\n\nexport default Theme;\n","import React from 'react';\nimport boatKids from './images/boatkids.jpg';\nimport horsies from './images/horsies.jpg';\nimport station from './images/station.jpg';\nimport './PictureBreak.style.scss';\n\nconst PictureBreak = (props: { item: number}) => {\n  const { item } = props;\n\n  let picture: string;\n\n  switch (item) {\n    case 1:\n      picture = boatKids;\n      break;\n    case 2:\n      picture = horsies;\n      break;\n    default:\n      picture = station;\n  }\n\n  return (\n    <section className=\"hero picture-break\">\n      <div className=\"inner\" style={{ backgroundImage: `url(${picture})` }} />\n    </section>\n  );\n};\n\nexport default PictureBreak;\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './CampInfo.style.scss';\nimport config from '../../config';\n\nconst { registerOpen } = config;\n\nconst text = `\n# Lägerinformation\n\n## För vem?\nLägret är för dig som nu går i klass 1-6. (Född mellan 2009-2014)\n\n## Anmälan\nAnmälan öppnar söndag 15 maj 20:00. Antalet platser är begränsat till 80 \nså skynda dig.\n\nSista dag för anmälan är 5 juni.\n\n## När\nLägret börjar onsdagen den 29 juni och slutar lördagen den 2 juli\n\n## Var\nLägret hålls på [Bänkåsvikens sommargård](https://goo.gl/maps/ErBisPybVmgvLn9x8)\nvid havet på södra Alnö utanför Sundsvall.\n`;\n\nconst textTwo = `\n# \n\n## Boende\nVi kommer att bo i tält under lägret. Hör med en kompis om att dela tält.  \nDet finns några platser i militärtält för dig som saknar tält. Ange i så fall det vid anmälan.  \nEn varm sovsäck och liggunderlag är bra att ha.\n\n## Tänk på!\nTänk på att vi är ute hela lägret, så regnkläder, stövlar och varma kläder \nbehövs. Packlista fås innan lägret.\n\n## Kostnad\n1000 kr/deltagare (syskon betalar 850 kr, inklusive tröja).\nAvgiften betalas i samband med anmälan.\n`;\n\nconst CampInfo: React.FC = () => (\n  <>\n    <section className=\"section info\">\n      <div className=\"container\">\n        <div className=\"columns\">\n          <div className=\"column theme-text reg-padded white-background\">\n            <ReactMarkdown>{text}</ReactMarkdown>\n          </div>\n          <div className=\"column theme-text reg-padded white-background\">\n            <ReactMarkdown>{textTwo}</ReactMarkdown>\n            { registerOpen && (\n              <>\n                <br />\n                <a className=\"registerButton\" href=\"https://docs.google.com/forms/d/e/1FAIpQLSeVzViUSbN64Af1bBBMwdmIEaG9dW_0OJomal7mTaqIuS21DQ/viewform\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  Anmäl dig här\n                </a>\n              </>\n            ) }\n          </div>\n        </div>\n      </div>\n    </section>\n  </>\n);\n\nexport default CampInfo;\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport rulesAside from './images/rules-aside.jpg';\n\nconst text = `\n# Dagsprogram\n\n9.00 Morgonsamling  \n9.45 Aktiviteter, pass 1  \n11.15 Lunch på Saloonen  \n12.45 Aktiviteter, pass 2  \n14.15 Mellis, fritid, bad  \n15.30 Föreställning High Chaparall  \n17.00 Middag på Saloonen  \n17:15 Bank & Candy Store öppen  \n19.30 Lägerbål i Nybyggarnas glänta  \n21.30 God natt i Indianbyn  \n`;\n\nconst textTwo = `\n# Aktiviteter\n\n## Onsdag\nNybyggarna intar landet, klanaktiviteter\n\n## Torsdag\nDueller & indianhantverk\n\n## Fredag\nGuldäventyr och soft strandhäng\n\n## Lördag\nDet avgörande slaget mellan lägrets klaner\n`;\n\nconst textThree = `\n# Sheriffens command\n\nTa hand om varandra.  \nKom i tid till samlingarna.  \nHa kul på lägret och se till att andra trivs.  \nLåt mobilerna vara. Prata med din ledare om du behöver ringa.  \nHåll dig inom området.  \nFölj med en ledare när du går och badar.  \nPrata alltid med din ledare innan du lämnar gruppen.  \nHåll rent och snyggt omkring dig.  \n`;\n\nconst Expectations: React.FC = () => (\n  <>\n    <section className=\"section info\">\n      <div className=\"container\">\n        <div className=\"columns\">\n          <div className=\"column theme-text reg-padded white-background\">\n            <ReactMarkdown>{text}</ReactMarkdown>\n          </div>\n          <div className=\"column theme-text reg-padded white-background\">\n            <ReactMarkdown>{textTwo}</ReactMarkdown>\n          </div>\n        </div>\n      </div>\n    </section>\n    <section className=\"section info\">\n      <div className=\"container\">\n        <div className=\"columns\">\n          <div className=\"column theme-text reg-padded white-background\">\n            <ReactMarkdown>{textThree}</ReactMarkdown>\n          </div>\n          <div className=\"column picture\" style={{ backgroundImage: `url(${rulesAside})` }} />\n        </div>\n      </div>\n    </section>\n  </>\n);\n\nexport default Expectations;\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport sandCastle from './images/finalpic.jpg';\nimport './Questions.style.scss';\nimport bildaPic from './images/bilda.png';\n\nconst text = `\n# Frågor och information\n\nOm du har frågor, maila till lagerledningen@gmail.com\n\n## Arrangörer\nFöreningen Bänkåsvikens framtid i samarbete med Brunnskyrkan Härnösand, Ljustorps\nbaptistförsamling, Elimkyrkan och Hagakyrkan i Sundsvall, Bethel Stöde, Filadelfia Stigsjö samt\nStudieförbundet Bilda.\n\n![bilda](${bildaPic})\n\n## Kan vi få hjälp? \nHör av dig om du kan hjälpa till praktiskt under lägret med mat, disk, städning, handling, tältresning mm. Du behövs!\n`;\n\nconst Questions: React.FC = () => (\n  <>\n    <section className=\"section questions\">\n      <div className=\"container\">\n        <div className=\"columns\">\n          <div className=\"column question-text reg-padded white-background\">\n            <ReactMarkdown>{text}</ReactMarkdown>\n          </div>\n          <div className=\"column picture\" style={{ backgroundImage: `url(${sandCastle})` }} />\n        </div>\n      </div>\n    </section>\n  </>\n);\n\nexport default Questions;\n","import React from 'react';\nimport './App.style.scss';\nimport Header from '../header/Header';\nimport RegisterButton from '../registerButton/RegisterButton';\nimport Theme from '../theme/Theme';\nimport PictureBreak from '../pictureBreak/PictureBreak';\nimport CampInfo from '../campInfo/CampInfo';\nimport Expectations from '../expectations/Expectations';\nimport Questions from '../questions/Questions';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <RegisterButton />\n      <Header />\n      <Theme />\n      <PictureBreak item={1} />\n      <CampInfo />\n      <PictureBreak item={2} />\n      <Expectations />\n      <PictureBreak item={3} />\n      <Questions />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}